User Interface Examples
{
	Applications and Environments
	{
;		A1  Planning Your MFC Application
;		A2  Creating an MFC Application using the AppWizard
;		A3  Creating a Class using the ClassWizard
		A4  Initializing the Application Screen
		A5  Saving the Application Screen
		A6  Processing Command Line Options
		A7  Dynamically Changing Application Icons
		A8  Prompting the User for Preferences
		A9  Saving and Restoring User Preferences
		A10 Terminating Your Application
		A11 Creating a Splash Screen
		B1  Putting a Static Logo in the Toolbar
		B2  Putting an Animated Logo in the Toolbar
		B3  Starting Only One Instance
		B4  Creating a Dialog/MDI Hybrid Application
		B5  Putting Icons in the System Tray
		B6  Logo in the Main Window's Title Bar
	}


	Menus
	{
;		A12 Using the Menu Editor
;		A13 Adding a Menu Command Handler
		A14 Dynamically Changing Menus Based on Document Viewed
		A15 Enabling and Disabling Menu Commands
		A16 Checkmarking Menu Commands
		A17 Radio-marking Menu Commands
		A18 Dynamically Modifying Menus
		A19 Dynamically Modifying the System Menu
		A20 Triggering a Menu Command
		A21 Creating Popup Menus
		B7  Putting Icons in a Menu
		B8  Command Bar Appearance
		B9  Programmable Toolbars
		B10 Put a Toolbar, Menu and Status Bar in Your Dialog Application
		B11 Add a Bitmap Logo to a Popup Menu
	}

	Toolbars and Status Bars
	{
;		A22 Using the Toolbar Editor
		A23 Enabling and Disabling Toolbar Buttons
		A24 Adding Words to Your Toolbar Buttons
		A25 Nonstandard Toolbar Sizes
		A26 Keeping Toolbar Buttons Pressed
		A27 Keeping Only One Toolbar Button in a Group Pressed
		A28 Adding Non-Button Controls to a Toolbar
;		A29 Modifying Your Application's Status Bar
		A30 Updating Status Bar Panes
		A31 Adding Other Controls to Your Status Bar
		B12 A Dropdown Button in a Toolbar
		B13 Putting an Icon in the Status Bar
		B14 Using a Rebar
	}

	Views
	{
		A32 Scroll View
		A33 Changing the Mouse Cursor
		A34 Wait Cursors
		A35 Form Views
		A36 List View
		A37 Dynamically Splitting a View
		B15 Tabbed Form Views
		B16 Any Common Control as a View
		B17 Printing a Report
		B18 Printing the View
		B19 Drawing to the MDI Client View
		B20 Dragging and Dropping Files into Your View
	}

	Dialog Boxes and Bars
	{
;		A38 Using the Dialog Editor
;		A39 Creating a Dialog Box Class
		A40 Modal Dialog Boxes
		A41 Modeless Dialog Boxes
		A42 Tabbing Between Controls in a Modeless Dialog Box
		A43 Animation on a Dialog box
		A44 Message Boxes
		A45 Dialog Bars
		B21 Dynamically Changing Your Dialog Box Size
		B22 Customized Data Exchange and Validation
		B23 Overriding the Common File Dialog
		B24 Overriding the Common Color Dialog
		B25 Getting a Directory Name
		B26 Child Dialog Box
		B27 Child Property Sheet
	}

	Control Windows
	{
		A46 Creating a Control Window Anywhere
		A47 Customizing a Common Control Window with Subclassing
		A48 Customizing a Common Control Window with Superclassing
		A49 Putting Bitmaps on a Button
		A50 Dynamically Filling a Combo Box
		A51 Sorting a List Control
		A52 Line Control
		B28 Self Drawn Control
		B29 Adding a Button to a Window Caption
		B30 Hot Key Control
	}

	Drawing
	{
		A53 Drawing Figures
		A54 Drawing Text
		A55 Loading an Icon From Anywhere and Drawing
		A56 Loading a Bitmap From Anywhere
		A57 Creating a Bitmap From a File
		A58 Creating a Bitmap From Scratch
		B31 Using Non-diffused Colors
		B32 Stretching a Bitmap
		B33 Capturing the Screen
		B34 Outputting a DIB Bitmap File
	}

	Help
	{
		B35 Help Menu Item
		B36 Context Sensitive Help
		B37 Bubble Help
	}

	Plain Windows
	{
		B38 Creating a Generic Window
		B39 Creating a Window Class--The Short Version
		B40 Creating a Window Class--The Long Version
	}

	Specialized Applications
	{
		B41 Creating a Simple Text Editor
		B42 Creating a Simple RTF Editor
		B43 Explorer Interface
		B44 Creating a Simple ODBC Database Editor
		B45 Creating a Simple DAO Database Editor
		B46 Creating a Simple Wizard
	}

}


Internal Processing Examples
{
	Messaging and Communication
	{
;		A59 Adding a Message Handler or MFC Class Override
		A60 Adding a Command Range Message Handler
		A61 Rerouting Command Messages
		A62 Creating Your Own Windows Message
		B47 Waiting for a Message
		B48 Clearing Messages
		B49 Sending a Message to Another Application
		B50 Sharing Data with Another Application
		B51 Communicating with any Application Using Sockets
		B52 Using Serial or Parallel I/O
	}

	Files, Serialization and Databases
	{
		A63 Accessing Binary Files
		A64 Accessing Standard I-O Files
		A65 Accessing Memory Files
		A66to71 Serialization
;		A66 Implementing Serialization in Your Data Classes
;		A67 Serializing Your SDI/MDI Document
;		A68 Serialization on Command
;		A69 Transparently Upgrading Serialized Documents
;		A70 Serializing Polymorphised Classes
;		A71 Serializing Data Collections
		A72 Accessing an ODBC Database
		A73 Accessing a DAO Database
	}

	Multitasking
	{
		B53 Background Processing
		B54 Executing Another Application
		B55 Changing Your Priority
		B56 Multitasking within Your Application--Worker Threads
		B57 Multitasking within Your Application--User Interface Threads
		B58 Sending a Message to a User Interface Thread
		B59 Sharing Data with Your Threads
	}

	Potpourri
	{
		A74 Cut Copy Paste Text Data
		A75 Cut Copy Paste Rich Text Data
		A76 Cut Copy Paste Binary Data
		A77 Array Functions
		A78 List Functions
		A79 Map Functions
		A80 System Keys
		A81 Time
		B60 Timers
		B61 Sounds
		B62 VC++ Macros
		B63 Using Function Addresses
		B64 Binary Strings
		B65 Rebooting Your Machine
		B66 Getting Free Disk Space
		B67 Flashing a Window or Text
	}
}

Packaging Examples
{
	Libraries
	{
		A82  Statically Linked C Library
		A83a Dynamically Linked C Library
		A83b Dynamically Linked Cpp Library
		A84  Dynamically Linked MFC Extension Class Libraries
		A85  Resource Library
	}
}

COM Examples
{
	Creating and Accessing COM Objects
	{
		C1 Creating a COM Object Using C++ and the COM API
		C2 Creating a COM Object Using C++ and Smart Pointers
		C3 Creating a COM Object Using MFC and Late Binding
		C4 Creating a COM Object Using Smart Pointers and Late Binding
		C5 Creating an ActiveX Control using MFC
		C6 Creating an ActiveX Control using Visual Basic
		C7 Creating a COM Object using Visual Basic
		C8 Creating a COM Object using Visual J++
	}

	Writing COM Servers with MFC
	{
		C9 Creating an Interface Server for MFC
		C10 Writing a COM DLL Server with MFC
		C11 Writing a COM EXE Server with MFC
		C12 Writing a COM Object That Supports Late Binding Using MFC
		C13 Writing an MFC COM Server that Supports Callback Ability
		C14 Handling Callbacks from COM objects within MFC
		C15 Writing a COM Singleton Server with MFC
		C16 Aggregating a COM Object with MFC
		C17 Writing an ActiveX Control Using MFC
	}

	Writing COM Servers with ATL
	{
		C18 Writing a COM DLL Server using ATL
		C19 Writing a COM EXE Server using ATL
		C20 Writing a COM EXE Service using ATL
		C21 Modifying Your ATL COM Server
		C22 Writing a COM Server That Supports Late Binding using ATL
		C23 Writing a COM Singleton Server using ATL
		C24 Writing a COM Tearoff Server using ATL
		C25 Writing an ATL COM Server that supports Callback Ability
		C26 Aggregating a COM Object using ATL
	}

	Writing COM Servers with VB and VJ++
	{
		C27 Writing an ActiveX DLL Server using Visual Basic
		C28 Handling Callbacks from COM objects within Visual Basic
		C29 Writing a COM DLL Server using Visual J++
		C30 Handling Callbacks from COM objects within Visual J++
	}

	COM Communications
	{
		C31 Passing Data to a COM Object Using C++
		C32 Passing Interface Pointers Between Threads using C++
		C33 Passing Data between C++ and Visual Basic
		C34 Passing Collections between C++ and Visual Basic
		C35 Passing Data between C++ and Visual J++
	}

	COM+ Examples
	{
		C36 Writing an MTS/COM+ Server using ATL
		C39 Using the Event Server
		C40 Writing and Accessing a Queued COM Object
	}

	Accessing Database Objects
	{
		C41 Accessing a Database Using C++ and ADO
		C42 Accessing a Database Using Visual Basic and ADO
		C43 Accessing a Database Using Visual J++ and ADO
	}

	Potpourri
	{
		C44 Licensing Your COM Object using MFC
		C45 Licensing Your COM Object using ATL
		C46 Processing COM Errors Using C++
		C48 Turning off Marshelling for an Object Using ATL
	}
}
