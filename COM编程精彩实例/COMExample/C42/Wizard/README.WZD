/////////////////////////////////////////////////////////////////////
// How to use the ADO COM object.
/////////////////////////////////////////////////////////////////////
1) First, define the ADO classes to be used:
Dim cn As New ADODB.Connection
Dim cmd As New ADODB.Command
Dim rs As New ADODB.Recordset
Dim prm As ADODB.Parameter

2) To open a data source connection use:
    cn.ConnectionTimeout = 1000
' parameters are: connection string, user id, password,
    cn.Open "WZDDB", "", "", adCmdUnspecified
' initialize command object
    Set cmd.ActiveConnection = cn
  
3) To get a record set from the data source using SQL use:
' open record set
    rs.Open "SELECT * FROM CUSTOMERS", cn, adOpenForwardOnly, adLockPessimistic
    
   
4) To scroll through the recordset:
    While (Not rs.EOF)
        CustomerID = rs("CustomerID")
        CompanyName = rs("CompanyName")
        ContactName = rs("ContactName")
        rs.MoveNext
    Wend
    rs.MoveFirst

5) To add a record to the recordset use:
    rs.AddNew
    rs("CustomerID") = "BONCO"
    rs("CompanyName") = "Franks"
    rs("ContactName") = "Runk"
    rs.Update

6) To modify a field in a row in a recordset:
' (edits the current record)
    rs(2) = "Smith"
    rs.Update

7) To delete a record from the recordset:
' (deletes the current record)
    rs.Delete

8)	To close the recordset:
    rs.Close
    
9) To execute a stored procedure:

    'specify timeout (optional)
    cmd.CommandTimeout = 1000
    
    ' specify stored procedure
    cmd.CommandText = "Customers Query"
    cmd.CommandType = adCmdStoredProc

    ' in order and one-by-one, add the calling parameter(s) required by the stored procedure
    ' same parameters as C++ ADO
    Set prm = cmd.CreateParameter("", adInteger, adParamInput, 5, 1234)
    cmd.Parameters.Append prm

    ' execute stored procedure
    res = cmd.Execute(0, 0, adCmdStoredProc)

    ' retrieve an out parameter (if parameter direction is adParamOutput, adParamInputOutput or adParamReturnValue)
    vt = rs(0)

10) To execute a stored procedure that returns a recordset:

' specify stored procedure with spot where recordset will be returned marked with "resultset"
    cmd.CommandText = "{ call Wzd.Package.SP(?,?,?,?,{resultset 1024, my_out})}"
    cmd.CommandType = adCmdText

' add input parameters only, one for each "?" in stored procedure call above
    Set prm = cmd.CreateParameter("", adInteger, adParamInput, 5, 1234)
    cmd.Parameters.Append prm

    ' execute stored procedure
    Set rs = cmd.Execute(0, 0, adCmdStoredProc)
    
    ' scroll through rs as before
    
    ' close rs
    rs.Close
       
11) To use transactions when not using MTS/COM+:
' if not using MTS/COM+ objects
    cn.BeginTrans

    cn.CommitTrans

    cn.RollbackTrans

   
12) To catch and scroll through ADO errors:
' at the top of the subroutine use:
On Error GoTo AdoError

' then at the bottom use
AdoError:
      Dim errLoop As Error
      Dim strError As String
      Set Errs = cn.Errors
      For Each errLoop In Errs
           Debug.Print errLoop.SQLState
           Debug.Print errLoop.NativeError
           Debug.Print errLoop.Description
      Next
Done:

13) To close the data source connection:
    cn.Close


/////////////////////////////////////////////////////////////////////
// From: COM Programming by Example by John E. Swanke
// Copyright (C) 2000 jeswanke. All rights reserved.
/////////////////////////////////////////////////////////////////////

